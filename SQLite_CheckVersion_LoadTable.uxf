<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>415</x>
      <y>20</y>
      <w>105</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Interface: ITable
--
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>415</x>
      <y>50</y>
      <w>105</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Interface: IManualRow
--
+ int FieldCount        
+ string ValuesSequence
+ string KeyValuePairs 
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>20</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Interface
bg=yellow</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>365</x>
      <y>20</y>
      <w>60</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>365</x>
      <y>20</y>
      <w>60</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;70.0;40.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>95</y>
      <w>105</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>_Class: MainBaseRow_
--
_Public SerializeField:_
+ int Level;
+ int MightBonus;
+ int FoodCost;
+ int WoodCost;
+ int StoneCost;
+ int MetalCost;
+ string TimeMin;
+ int TimeInt;
+ int Required;
+ string Unlock;

bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>515</x>
      <y>50</y>
      <w>95</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0;170.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>0</y>
      <w>105</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>_Class: VersionRow_
--
_Public SerializeField:_
+ int Id;
+ string Task;
+ string Content;
+ string Comment;
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>515</x>
      <y>0</y>
      <w>95</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;110.0;120.0;110.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>490</y>
      <w>120</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>_Class: ManualTableBase&lt;T&gt;_
where T: IManualRow
--
_Public SerializeField:_
+ string TableName;
+ List&lt;string&gt; Columns;
+ List&lt;T&gt; rows;

_Public Properties:_
+ int FieldCount;
+ T this[int];

_Public Method:_

* Clear();
* void LoadRow(T);
* void LoadColumn(string);
* void SQLInsert(IDbConnection,T);
* void SQLUpdate(IDbConnection,int);
* void SQLDelete(IDbConnection,int);

bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>380</y>
      <w>105</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>_Class: ScriptableObject_
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>380</y>
      <w>65</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;230.0;30.0;230.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>595</y>
      <w>105</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: Clear()_
--
if (rows != null)
  rows.Clear();
if (Columns != null)
  Columns.Clear();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>595</y>
      <w>315</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;610.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>515</y>
      <w>105</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>_Propety: FieldCount_
--
return Columns.Count;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>250</x>
      <y>545</y>
      <w>105</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>_Propety: this[rowId]_
--
return rows[rowId];
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>515</y>
      <w>65</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;60.0;110.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>545</y>
      <w>65</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;110.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>650</y>
      <w>105</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>_Method: LoadRow(newRow)_
--
if (rows == null)
    rows = new List&lt;T&gt;();
rows.Add(newRow);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>605</y>
      <w>315</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;400.0;100.0;400.0;10.0;610.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>700</y>
      <w>105</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: LoadColumn(column)_
--
if (!Columns.Contains(column))
   Columns.Add(column);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>615</y>
      <w>315</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;180.0;400.0;180.0;400.0;10.0;610.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>740</y>
      <w>260</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>_Method: SQLInsert(dbConnection,row)_
--
string[] cols = Columns.ToArray();
string colsString = SQLUtils.GetSequenceString(",", cols);
string valuesString = row.ValuesSequence;

string cmd = SQLUtils.GetInsertCommand(TableName, colsString, valuesString);
if (dbConnection.InsertValue(cmd))
   rows.Add(row);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>255</x>
      <y>620</y>
      <w>160</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;250.0;90.0;250.0;90.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>815</y>
      <w>260</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>_Method: SQLUpdate(dbConnection,rowID)_
--
T row = rows[rowID];
string keyValuePairs = row.KeyValuePairs;
string cmd = SQLUtils.GetUpdateCommand(TableName, rowID + 1, 
                                                                       keyValuePairs);
dbConnection.UpdateValue(cmd);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>255</x>
      <y>630</y>
      <w>160</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;380.0;90.0;380.0;90.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>890</y>
      <w>260</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: SQLDelete(dbConnection,rowID)_
--
string cmd = SQLUtils.GetDeleteCommand
                                  (TableName, string.Format(" _rowid_ = {0}", rowId + 1));
if (dbConnection.Delete(cmd))
   rows.RemoveAt(rowId);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>255</x>
      <y>640</y>
      <w>160</w>
      <h>265</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;510.0;90.0;510.0;90.0;10.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>495</y>
      <w>70</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>495</y>
      <w>135</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>[CreateAssetMenu(
fileName = "New MainBase Table", 
menuName = "SQLiteTable/MainBase",
order = 2)]
_Class: ManualTableBase&lt;MainBaseRow&gt;_
--
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>550</y>
      <w>135</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>[CreateAssetMenu(
fileName = "New Version Table", 
menuName = "SQLiteTable/Version",
order = 3)]
_Class: ManualTableBase&lt;VersionRow&gt;_
--
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>495</y>
      <w>70</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;120.0;70.0;120.0;70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>415</x>
      <y>120</y>
      <w>105</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Enum: RowType
--
+ MainBase
+ Version
+ Soldier
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>320</x>
      <y>120</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Enum
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>365</x>
      <y>120</y>
      <w>60</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>100.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>465</y>
      <w>170</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>_Class: ManualTableLoader_
--
_Private Fields:_
- VersionRow versionTask;

_Public Field:_
+ string CurrentVersion;
+ string ServerVersion;
+ SQLiteManualConnection SQLDataConnection;
+ SQLiteManualConnection SQLVersionConnection;
+ VersionTable Version;
+ TableContainer[] Containers;

_Public Method:_
* Load(RowType,ScriptableObject);
* T Cast&lt;T&gt;(ScriptableObject);
* bool CheckVersion();
* ReloadData();
* InitSQLConnection();

_Private Method:_
* void LoadTables();
* bool IsUpdateVersion(ref VersionRow);
* void Start();
* void Awake();
* void OnApplicationQuit();
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>510</y>
      <w>170</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0;210.0;180.0;320.0;180.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>335</y>
      <w>210</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>_Method: Load(ManualRowType,TableData)_
--
switch (ManualRowType)
 case RowType.MainBase:
   SQLDataConnection.LoadTable(((MainBaseTable)TableData));
   break;
 case DBRowType.Soldier:
   SQLDataConnection.LoadTable(Cast&lt;SoldierTable&gt;(TableData));
   break;
 case RowType.Version:
   SQLVersionConnection.LoadTable(((VersionTable)TableData));
   break;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>435</y>
      <w>210</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: Cast&lt;T&gt;(data)_
where T:  ScriptableObject, ITable
--
return (T)data;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>585</y>
      <w>170</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0;210.0;50.0;320.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>630</y>
      <w>205</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: LoadTables()_
--
for (int i = 0; i &lt; Containers.Length; i++)
  Load(Containers[i].RowType, Containers[i].Table);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>670</y>
      <w>205</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>_Method: IsUpdateVersion(ref versionTask)_
--
if (versionTask == null)
 Load(DBRowType.Version, Version);
versionTask = Version.Rows.FirstOrDefault
	(x =&gt; x.Task.CompareTo("Version") == 0);
CurrentVersion = versionTask?.Content;
bool result = CurrentVersion == null ? 
	true : CurrentVersion.CompareTo(ServerVersion) != 0;
return result;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>805</y>
      <w>205</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>_Method: Awake()_
--
versionTask = Version.rows?.FirstOrDefault
              (x =&gt; x.Task.CompareTo("Version") == 0);
CurrentVersion = versionTask?.Content;t;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>765</y>
      <w>205</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: Start()_
--
 SQLVersionConnection.Init();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>630</y>
      <w>175</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>635</y>
      <w>175</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;200.0;80.0;200.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>645</y>
      <w>175</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;250.0;200.0;250.0;200.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>650</y>
      <w>175</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;320.0;200.0;320.0;200.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>1125</y>
      <w>200</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>_Class: SQLiteManualConnection_
--
_Public Field:_
+ SqliteConnection DbConnection;
+ string DBPath;

_Public Method:_
* void LoadTable&lt;T&gt;(MaunualTableBase&lt;T&gt;);
* void Init();
* void Dispose();
* static string MakeJSONValue(string,object);
* static string FormatJSON(string);

_Private Method:_
* void LoadColumns&lt;T&gt;(IDataReader,ManualTableBase&lt;T&gt;);
* void Awake();

bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1675</y>
      <w>250</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: Awake()_
--
DBPath = Application.dataPath + DBPath;
ConnectionString = "URI=file:" + DBPath;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1630</y>
      <w>250</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>_Method: LoadColumns&lt;T&gt;(reader,table)_
where T: IManualRow
--
for (int i = 0; i &lt; reader.FieldCount; i++)
  table.LoadColumn(reader.GetName(i));</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1175</y>
      <w>250</w>
      <h>245</h>
    </coordinates>
    <panel_attributes>_Method: LoadTable&lt;T&gt;(reader,table)_
where T: IManualRow,new()
--
try
{
    DbConnection.Open();
    using (IDbCommand dbCmd = DbConnection.CreateCommand())
    {
      string cmd = string.Format("SELECT * FROM {0} ", table.TableName);
      dbCmd.CommandText = cmd;
      using (IDataReader reader = dbCmd.ExecuteReader())
      {
        table.Clear();
        if (reader.Read())
        {
          LoadColumns(reader, table);
          do
          {
           int fieldCount = table.FieldCount;
           string json = "";
           for (int i = 0; i &lt; fieldCount; i++)
              json += MakeJSONValue(reader.GetName(i), reader.GetValue(i)) + ((i &lt; fieldCount - 1) ? "," : "");
           json = FormatJSON(json);
           table.LoadRow((T)JsonUtility.FromJson(json, typeof(T)));
          } while (reader.Read());
         }
         reader.Close();
         dbCmd.Dispose();
       }
       DbConnection.Close();
} catch {}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1540</y>
      <w>250</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>_Method: MakeJSONValue(field,object)_
--
if (value.GetType() == typeof(DBNull) 
    || value == null || value.GetType() == typeof(string))
  return string.Format("\"{0}\":\"{1}\"", field, value);
else
  return string.Format("\"{0}\":{1}", field, value);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1600</y>
      <w>250</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>_Method: Format(valueString)_
--
return "{" + valueString + "}";</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1175</y>
      <w>140</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1200</y>
      <w>140</w>
      <h>355</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;690.0;140.0;690.0;140.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1210</y>
      <w>140</w>
      <h>405</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;790.0;140.0;790.0;140.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1215</y>
      <w>140</w>
      <h>430</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;840.0;140.0;840.0;140.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1225</y>
      <w>140</w>
      <h>465</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;910.0;140.0;910.0;140.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>405</x>
      <y>380</y>
      <w>120</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>[CreateAssetMenu(
fileName = "New Container", 
menuName = "SQLiteTable/Container",
order = 1)]
_Class: TableContainer_
--
_Public SerializeField:_
+ ScriptableObject Table;
+ RowType RowType;

bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>350</x>
      <y>380</y>
      <w>65</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2100</x>
      <y>350</y>
      <w>200</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>_Static Class: SQLUtils_
--
_Public Method:_
* static bool UpdateValue(this IDbConnection, string);
* static bool InsertValue(this IDbConnection, string);
* static bool Delete(this IDbConnection, string);
* static string GetUpdateCommand(string, string, string);
* static string GetUpdateCommand(string, int, string);
* static string GetInsertCommand(string, string, string);
* static string GetDeleteCommand(string, string);
* static string GetSequenceString(string, params object[]);
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>370</y>
      <w>250</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>_Method: UpdateValue(dbConnection,cmd)_
--
try
{
 dbConnection.Open();
 using (IDbCommand dbCmd = dbConnection.CreateCommand())
 {
    dbCmd.CommandText = cmd;
    dbCmd.ExecuteScalar();
    dbConnection.Close();
 }
  return true;
}
catch
{
  dbConnection.Close();
  return false;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>370</y>
      <w>155</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>525</y>
      <w>250</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>_Method: InsertValue(dbConnection,cmd)_
--
try
{
 dbConnection.Open();
 using (IDbCommand dbCmd = dbConnection.CreateCommand())
 {
    dbCmd.CommandText = cmd;
    dbCmd.ExecuteScalar();
    dbConnection.Close();
 }
  return true;
}
catch
{
  dbConnection.Close();
  return false;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>680</y>
      <w>250</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>_Method: DeleteValue(dbConnection,cmd)_
--
try
{
 dbConnection.Open();
 using (IDbCommand dbCmd = dbConnection.CreateCommand())
 {
    dbCmd.CommandText = cmd;
    dbCmd.ExecuteScalar();
    dbConnection.Close();
 }
  return true;
}
catch
{
  dbConnection.Close();
  return false;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>835</y>
      <w>250</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: GetUpdateCommand(table,conditions,colValuePair)_
--
return string.Format("UPDATE {0} SET {1} WHERE {2} ", 
                     table, colValuePair, conditions);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>875</y>
      <w>250</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: GetUpdateCommand(table,rowId,colValuePair)_
--
return string.Format("UPDATE {0} SET {1} WHERE _rowid_ = {2} ",
                     table, colValuePair, rowId);

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>915</y>
      <w>250</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: GetInsertCommand(table,cols,values)_
--
return string.Format("INSERT INTO {0} ({1}) VALUES ({2})",
                      table, cols, values);


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>955</y>
      <w>250</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: GetDeleteCommand(table,conditions)_
--
return string.Format("DELETE FROM {0} WHERE {1}", 
                     table, conditions);


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>995</y>
      <w>250</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: GetSequenceString(separateSign,values)_
--
string result = "";
for (int i = 0; i &lt; values.Length; i++)
   result += values[i] + ((i &lt; values.Length - 1) ? separateSign : "");
return result;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>380</y>
      <w>155</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;300.0;150.0;300.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>385</y>
      <w>155</w>
      <h>310</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;600.0;150.0;600.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>395</y>
      <w>155</w>
      <h>455</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;890.0;150.0;890.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>405</y>
      <w>155</w>
      <h>485</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;950.0;150.0;950.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>410</y>
      <w>155</w>
      <h>520</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;1020.0;150.0;1020.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>420</y>
      <w>155</w>
      <h>550</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;1080.0;150.0;1080.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1955</x>
      <y>425</y>
      <w>155</w>
      <h>585</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;1150.0;150.0;1150.0;150.0;10.0;290.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1425</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: Init()_
--
 if (DbConnection == null)
   DbConnection = new SqliteConnection(ConnectionString);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>15</x>
      <y>1460</y>
      <w>250</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>_Method: Dispose()_
--
if (DbConnection != null)
{
  DbConnection.ConnectionString = "";
  DbConnection.Close();
  DbConnection.Dispose();
  DbConnection = null;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1195</y>
      <w>140</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;540.0;140.0;540.0;140.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>1185</y>
      <w>140</w>
      <h>255</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;490.0;140.0;490.0;140.0;10.0;260.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>850</y>
      <w>205</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: OnApplicationQuit()_
--
SQLDataConnection.Dispose();
SQLVersionConnection.Dispose();
System.GC.Collect(2, System.GCCollectionMode.Forced);
System.GC.WaitForPendingFinalizers();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1125</x>
      <y>660</y>
      <w>175</w>
      <h>205</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;390.0;200.0;390.0;200.0;10.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>475</y>
      <w>210</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: CheckVersion()_
--
return CheckVersion(versionTask: ref versionTask);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>510</y>
      <w>210</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>_Method: ReloadData()_
--
if (versionTask != null)
{
   versionTask.Content = ServerVersion;
   Version.SQLUpdate(SQLVersionConnection.DbConnection, 
                     Version.rows.IndexOf(versionTask));
}
else
{
   Version.SQLInsert(SQLVersionConnection.DbConnection, new VersionRow()
   {
     Id = 1,
     Task = "Version",
     Content = ServerVersion,
     Comment = "None"
    });
}
LoadTables();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>925</x>
      <y>585</y>
      <w>210</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: InitSQLConnection()_
--
SQLDataConnection.Init();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>475</y>
      <w>170</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0;210.0;240.0;320.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>440</y>
      <w>170</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0;210.0;290.0;320.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>335</y>
      <w>170</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;210.0;10.0;210.0;480.0;320.0;480.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2085</x>
      <y>1160</y>
      <w>200</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>_Class: VersionGame_
--
_Public Field:_
+ static VersionGame Instance;
+ Connection Connection;
+ ManualTableLoader Loader;
+ RSS_PositionJSONTable RSS_Table;


_Public Method:_
* void S_CHECK_VERSION();

_Private Method:_
* void Awake();
* void Start();
* void  R_CHECK_VERSION(SocketIOEvent);
* void DownloadFile(string,string);
* void DownloadComplete(object, AsyncCompletedEventArgs);
* void R_GET_RSS(SocketIOEvent);
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1180</y>
      <w>250</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: S_CHECK_VERSION()_
--
Dictionary&lt;string, string&gt; data = new Dictionary&lt;string, string&gt;();
data["Version"] = "1";
Connection.Socket.Emit("S_CHECK_VERSION", new JSONObject(data));</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1540</y>
      <w>250</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>_Method: DownloadComplete(sender,e)_
--
WebClient client = (WebClient)sender;
client.CancelAsync();
client.Dispose();

Loader.InitSQLConnection();
Loader.ReloadData();        
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1480</y>
      <w>250</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>_Method: DownloadFile(link,saveAt)_
--
System.Net.WebClient client = new WebClient(); 
client.DownloadFileAsync(new Uri(link),saveAt);
client.DownloadFileCompleted +=
                         new AsyncCompletedEventHandler(DownloadComplete);     
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1365</y>
      <w>250</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>_Method: R_CHECK_VERSION(obj)_
--
Loader.ServerVersion = obj.data.GetField("Version")?.ToString().JsonToString();
if (Loader.CheckVersion())
{
  string link = obj.data["Data"]?.ToString().JsonToString();
  string saveAt = Application.dataPath + @"\Data\DB\Infantry.sqlite";
try
{
   if (File.Exists(saveAt))
     File.Delete(saveAt);
   DownloadFile(link, saveAt);
} catch{}

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1330</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: Start()_
--
Connection.Socket.On("R_CHECK_VERSION", R_CHECK_VERSION);
Connection.Socket.On("R_GET_RSS", R_GET_RSS);
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1295</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: Awake()_
--
Instance = this;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1180</y>
      <w>130</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0;140.0;90.0;240.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1245</y>
      <w>130</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;110.0;140.0;110.0;140.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1250</y>
      <w>130</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;170.0;140.0;170.0;140.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1260</y>
      <w>130</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;220.0;140.0;220.0;140.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1265</y>
      <w>130</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;440.0;140.0;440.0;140.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1275</y>
      <w>130</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;540.0;140.0;540.0;140.0;10.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1310</x>
      <y>1150</y>
      <w>170</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>_Class: Connection_
--
_Private Fields:_
- volatile float pingElapsed;
- Decoder decoder;
- Thread timer;

_Public Field:_
+ static Connection Instance;
+ SocketIOComponent SocketComponent;

_Public Properties:_
+ SocketIOComponent Socket;
+ bool IsServerConnected;
+ bool IsClose;
+ float PingTimeOut ;

_Private Method:_
* void Awake();
* void Start();
* void Update();
* void OnApplicationQuit();
* IEnumerator CheckVersion();
* void  OnMessage(object, MessageEventArgs);

bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>1290</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: Awake()_
--
if (Instance == null) Instance = this;
decoder = new Decoder();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>1325</y>
      <w>250</w>
      <h>155</h>
    </coordinates>
    <panel_attributes>_Method: Start()_
--
SocketComponent.socket.OnMessage += OnMessage;
timer = new Thread(() =&gt;
{
   pingElapsed = SocketComponent.pingInterval;
   while (true)
   {
     if (!IsClose)
     {
       Thread.Sleep(20);
       pingElapsed += 0.02f;
     }
     else
       Thread.Sleep(200);
    }
});
timer.Start();
StartCoroutine("CheckVersion");</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>1485</y>
      <w>250</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>_Method: Update()_
--
if (!IsClose)
  if (pingElapsed &gt;= PingTimeOut)
    SocketComponent.Close();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>1535</y>
      <w>250</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_Method: OnApplicationQuit()_
--
timer.Abort();
SocketComponent.Close();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>1580</y>
      <w>250</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>_Method: OnApplicationQuit()_
--
while(!IsServerConnected)
          yield return null;
VersionGame.Instance.S_CHECK_VERSION();
yield break;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>885</x>
      <y>1640</y>
      <w>250</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>_Method: OnMessage(sender,e)_
--
Packet packet = decoder.Decode(e);
switch (packet.enginePacketType)
{
 case EnginePacketType.PONG:
   pingElapsed = 0;
   break;
}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1290</y>
      <w>190</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1300</y>
      <w>190</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;230.0;60.0;230.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1305</y>
      <w>190</w>
      <h>195</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;370.0;230.0;370.0;230.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1315</y>
      <w>190</w>
      <h>235</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;450.0;230.0;450.0;230.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1320</y>
      <w>190</w>
      <h>275</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;530.0;230.0;530.0;230.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1130</x>
      <y>1330</y>
      <w>190</w>
      <h>325</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;630.0;230.0;630.0;230.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>580</x>
      <y>605</y>
      <w>135</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>[CreateAssetMenu(
fileName = "New Soldier Table",
menuName = "SQLiteTable/Soldier",
order = 5)]
_Class: ManualTableBase&lt;SoldierRow&gt; _
--
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>495</y>
      <w>70</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;230.0;70.0;230.0;70.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1720</x>
      <y>1255</y>
      <w>250</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Method: R_GET_RSS(obj)_
--
RSS_Table.LoadTable(obj.data["R_GET_RSS"]);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1965</x>
      <y>1255</y>
      <w>130</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0;140.0;100.0;240.0;100.0</additional_attributes>
  </element>
</diagram>
